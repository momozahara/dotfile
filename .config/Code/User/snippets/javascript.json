{
  "Tailwind Next Config": {
    "prefix": "tailwind-next",
    "body": [
      "\/** @type {import('tailwindcss').Config} *\/\r\nmodule.exports = {\r\n  content: [\r\n    \".\/pages\/**\/*.{js,ts,jsx,tsx}\",\r\n    \".\/components\/**\/*.{js,ts,jsx,tsx}\",\r\n  ],\r\n  theme: {\r\n    extend: {},\r\n  },\r\n  plugins: [],\r\n}\r\n"
    ]
  },
  "Tailwind React Config": {
    "prefix": "tailwind-react",
    "body": [
      "\/** @type {import('tailwindcss').Config} *\/\r\nmodule.exports = {\r\n  content: [\r\n    \".\/src\/**\/*.{js,ts,jsx,tsx}\",\r\n  ],\r\n  theme: {\r\n    extend: {},\r\n  },\r\n  plugins: [],\r\n}\r\n"
    ]
  },
  "Eslint T3 Config": {
    "prefix": "eslint-t3",
    "body": [
      "\/** @type {import(\"eslint\").Linter.Config} *\/\r\nconst config = {\r\n  parser: \"@typescript-eslint\/parser\",\r\n  parserOptions: {\r\n    project: true,\r\n  },\r\n  plugins: [\"@typescript-eslint\", \"prettier\"],\r\n  extends: [\r\n    \"eslint:recommended\",\r\n    \"next\/core-web-vitals\",\r\n    \"plugin:@typescript-eslint\/recommended-type-checked\",\r\n    \"plugin:@typescript-eslint\/stylistic-type-checked\",\r\n    \"plugin:prettier\/recommended\",\r\n    \"plugin:tailwindcss\/recommended\",\r\n  ],\r\n  rules: {\r\n    \"@typescript-eslint\/consistent-type-imports\": [\r\n      \"warn\",\r\n      {\r\n        prefer: \"type-imports\",\r\n        fixStyle: \"inline-type-imports\",\r\n      },\r\n    ],\r\n    \"@typescript-eslint\/no-unused-vars\": [\r\n      \"warn\",\r\n      {\r\n        argsIgnorePattern: \"^_\",\r\n      },\r\n    ],\r\n    \"tailwindcss\/no-custom-classname\": \"off\",\r\n    curly: \"error\",\r\n    camelcase: \"error\",\r\n    eqeqeq: \"error\",\r\n    \"no-undef\": \"off\",\r\n    \"no-useless-escape\": \"off\",\r\n    \"object-curly-newline\": [\r\n      \"error\",\r\n      {\r\n        ObjectExpression: \"always\",\r\n        ObjectPattern: {\r\n          multiline: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nmodule.exports = config;\r\n"
    ]
  },
  "Prettier T3 Config": {
    "prefix": "prettier-t3",
    "body": [
      "\/** @type {import(\"prettier\").Config} *\/\r\nconst config = {\r\n  singleAttributePerLine: true,\r\n  endOfLine: \"auto\",\r\n};\r\n\r\nmodule.exports = config;\r\n"
    ]
  },
  "Eslint T3 Config No Framework": {
    "prefix": "eslint-t3-nf",
    "body": [
      "\/** @type {import(\"eslint\").Linter.Config} *\/\r\nconst config = {\r\n  parser: \"@typescript-eslint\/parser\",\r\n  parserOptions: {\r\n    project: true,\r\n  },\r\n  plugins: [\"@typescript-eslint\", \"prettier\"],\r\n  extends: [\r\n    \"eslint:recommended\",\r\n    \"plugin:@typescript-eslint\/recommended-type-checked\",\r\n    \"plugin:@typescript-eslint\/stylistic-type-checked\",\r\n    \"plugin:prettier\/recommended\",\r\n  ],\r\n  rules: {\r\n    \"@typescript-eslint\/consistent-type-imports\": [\r\n      \"warn\",\r\n      {\r\n        prefer: \"type-imports\",\r\n        fixStyle: \"inline-type-imports\",\r\n      },\r\n    ],\r\n    \"@typescript-eslint\/no-unused-vars\": [\r\n      \"warn\",\r\n      {\r\n        argsIgnorePattern: \"^_\",\r\n      },\r\n    ],\r\n    \"tailwindcss\/no-custom-classname\": \"off\",\r\n    curly: \"error\",\r\n    camelcase: \"error\",\r\n    eqeqeq: \"error\",\r\n    \"no-undef\": \"off\",\r\n    \"no-useless-escape\": \"off\",\r\n    \"object-curly-newline\": [\r\n      \"error\",\r\n      {\r\n        ObjectExpression: \"always\",\r\n        ObjectPattern: {\r\n          multiline: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  ignorePatterns: [\"*.cjs\"],\r\n};\r\n\r\nmodule.exports = config;\r\n"
    ]
  },
  "Eslint Vue": {
    "prefix": "eslint-vue",
    "body": [
      "require(\"@rushstack\/eslint-patch\/modern-module-resolution\");\r\n\r\nmodule.exports = {\r\n  root: true,\r\n  extends: [\r\n    \"plugin:vue\/vue3-essential\",\r\n    \"eslint:recommended\",\r\n    \"@vue\/eslint-config-typescript\",\r\n    \"plugin:prettier\/recommended\",\r\n  ],\r\n  parserOptions: {\r\n    ecmaVersion: \"latest\",\r\n  },\r\n  rules: {\r\n    \"vue\/multi-word-component-names\": \"off\", \/\/ required for nuxt\r\n    semi: \"error\",\r\n    curly: \"error\",\r\n    camelcase: \"error\",\r\n    eqeqeq: \"error\",\r\n    \"no-undef\": \"off\",\r\n    \"no-useless-escape\": \"off\",\r\n    \"object-curly-newline\": [\r\n      \"error\",\r\n      {\r\n        ObjectExpression: \"always\",\r\n        ObjectPattern: {\r\n          multiline: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};"
    ]
  },
  "Prettier Vue": {
    "prefix": "prettier-vue",
    "body": [
      "\/** @type {import(\"prettier\").Config} *\/\r\nconst config = {\r\n  singleAttributePerLine: true,\r\n  endOfLine: \"auto\",\r\n};\r\n\r\nmodule.exports = config;"
    ]
  }
}
