{
  "Vite Eslint Prettier React": {
    "prefix": "vite-eslint-prettier-react",
    "description": "eslint.config.js",
    "body": [
      "import js from '@eslint\/js'\r\nimport globals from 'globals'\r\nimport reactHooks from 'eslint-plugin-react-hooks'\r\nimport reactRefresh from 'eslint-plugin-react-refresh'\r\nimport prettier from \"eslint-plugin-prettier\"\r\nimport tseslint from 'typescript-eslint'\r\n\r\nexport default tseslint.config(\r\n  { ignores: ['dist'] },\r\n  {\r\n    extends: [js.configs.recommended, ...tseslint.configs.recommended],\r\n    files: ['**\/*.{ts,tsx}'],\r\n    languageOptions: {\r\n      ecmaVersion: 2020,\r\n      globals: globals.browser,\r\n    },\r\n    plugins: {\r\n      'react-hooks': reactHooks,\r\n      'react-refresh': reactRefresh,\r\n      \"prettier\": prettier,\r\n    },\r\n    rules: {\r\n      \"prettier\/prettier\": [\r\n        \"error\",\r\n        {\r\n          endOfLine: \"auto\",\r\n          singleAttributePerLine: true\r\n        }\r\n      ],\r\n      ...reactHooks.configs.recommended.rules,\r\n      'react-refresh\/only-export-components': [\r\n        'warn',\r\n        { allowConstantExport: true },\r\n      ],\r\n      curly: \"error\",\r\n      camelcase: \"error\",\r\n      eqeqeq: \"error\",\r\n      \"no-undef\": \"off\",\r\n      \"no-useless-escape\": \"off\",\r\n      \"object-curly-newline\": [\r\n        \"error\",\r\n        {\r\n          ObjectExpression: \"always\",\r\n          ObjectPattern: {\r\n            multiline: true,\r\n          },\r\n        },\r\n      ]\r\n    },\r\n  },\r\n)"
    ]
  },
  "Vite Eslint Prettier Vue L": {
    "prefix": "vite-eslint-prettier-vue-legacy",
    "description": ".eslintrc.cjs",
    "body": [
      "\/* eslint-env node *\/\r\nrequire(\"@rushstack\/eslint-patch\/modern-module-resolution\");\r\n\r\nmodule.exports = {\r\n  root: true,\r\n  extends: [\r\n    \"plugin:vue\/vue3-essential\",\r\n    \"eslint:recommended\",\r\n    \"plugin:prettier\/recommended\",\r\n    \"@vue\/eslint-config-typescript\",\r\n  ],\r\n  parserOptions: {\r\n    ecmaVersion: \"latest\",\r\n  },\r\n  plugins: [\"prettier\"],\r\n  rules: {\r\n    \/\/\"vue\/multi-word-component-names\": \"off\", \/\/ required for nuxt\r\n    \"prettier\/prettier\": [\r\n      \"error\",\r\n      {\r\n        endOfLine: \"auto\",\r\n        singleAttributePerLine: true,\r\n      },\r\n    ],\r\n    curly: \"error\",\r\n    camelcase: \"error\",\r\n    eqeqeq: \"error\",\r\n    \"no-undef\": \"off\",\r\n    \"no-unused-vars\": \"warn\",\r\n    \"no-useless-escape\": \"off\",\r\n    \"object-curly-newline\": [\r\n      \"error\",\r\n      {\r\n        ObjectExpression: \"always\",\r\n        ObjectPattern: {\r\n          multiline: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n"
    ]
  },
  "Vite Eslint Prettier Vue": {
    "prefix": "vite-eslint-prettier-vue",
    "description": "eslint.config.js",
    "body": [
      "import pluginVue from \"eslint-plugin-vue\";\r\nimport {\r\n  vueTsConfigs,\r\n  defineConfigWithVueTs,\r\n} from \"@vue\/eslint-config-typescript\";\r\n\r\nimport stylistic from \"@stylistic\/eslint-plugin-js\";\r\nimport prettier from \"eslint-plugin-prettier\/recommended\";\r\n\r\nexport default [\r\n  {\r\n    name: \"app\/files-to-lint\",\r\n    files: [\"**\/*.{ts,mts,tsx,vue}\"],\r\n  },\r\n\r\n  {\r\n    name: \"app\/files-to-ignore\",\r\n    ignores: [\r\n      \"**\/dist\/**\",\r\n      \"**\/dist-ssr\/**\",\r\n      \"**\/coverage\/**\",\r\n      \"**\/.nuxt\/**\",\r\n      \"**\/components\/ui\/**\",\r\n      \"**\/lib\/**\",\r\n    ],\r\n  },\r\n\r\n  prettier,\r\n  ...pluginVue.configs[\"flat\/essential\"],\r\n  ...defineConfigWithVueTs(vueTsConfigs.recommended),\r\n  {\r\n    plugins: {\r\n      \"@stylistic\/js\": stylistic,\r\n    },\r\n  },\r\n\r\n  {\r\n    rules: {\r\n      curly: \"error\",\r\n      eqeqeq: \"error\",\r\n      \"no-undef\": \"off\",\r\n      \"no-unused-vars\": \"off\",\r\n      \"no-useless-escape\": \"off\",\r\n\r\n      \"prettier\/prettier\": [\r\n        \"error\",\r\n        {\r\n          singleQuote: false,\r\n          singleAttributePerLine: true,\r\n        },\r\n      ],\r\n\r\n      \"vue\/multi-word-component-names\": \"off\", \/\/ required for nuxt\r\n      \"vue\/no-unused-components\": \"warn\",\r\n      \"vue\/no-mutating-props\": \"error\",\r\n      \"vue\/attribute-hyphenation\": [\"error\", \"never\"],\r\n\r\n      \"@stylistic\/js\/object-curly-newline\": [\r\n        \"error\",\r\n        {\r\n          ObjectExpression: \"always\",\r\n          ObjectPattern: {\r\n            multiline: true,\r\n          },\r\n        },\r\n      ],\r\n\r\n      \"@typescript-eslint\/no-unused-vars\": \"off\",\r\n    },\r\n  },\r\n];"
    ]
  }
}
